var searchIndex = JSON.parse('{\
"trillium":{"doc":"Welcome to the <code>trillium</code> crate!","t":[3,8,3,3,3,6,23,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Conn","Handler","Info","Init","State","Upgrade","async_trait","before_send","before_send","before_send","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","conn_try","conn_unwrap","default","default","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","halt","has_upgrade","has_upgrade","has_upgrade","headers","headers_mut","init","init","init","inner","inner_mut","into","into","into","into","into_inner","is_halted","is_secure","listener_description","listener_description_mut","log_error","method","mut_state_or_insert_with","name","name","name","new","new","ok","path","pop_path","push_path","request_body","request_body_string","response_len","run","run","run","server_description","server_description_mut","set_body","set_halted","set_state","set_status","state","state_mut","status","take_response_body","take_state","tcp_socket_addr","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upgrade","upgrade","upgrade","vzip","vzip","vzip","vzip","with_body","with_header","with_state","with_status"],"q":["trillium","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Trillium HTTP connection.","The building block for Trillium applications.","This struct represents information about the currently …","Provides support for asynchronous initialization of a …","A handler for sharing state across an application.","A HTTP protocol upgrade","","","Performs any final modifications to this conn after all …","Performs any final modifications to this conn after all …","","","","","","","","","","","Unwraps an Result::Ok or returns the conn with a 500 …","Unwraps an Option::Some or returns the conn.","","","","","","","","","","","","","","","sets the <code>halted</code> attribute of this conn, preventing later …","","predicate function answering the question of whether this …","predicate function answering the question of whether this …","returns the request headers","returns the mutable response headers","","Performs one-time async set up on a mutable borrow of the …","Performs one-time async set up on a mutable borrow of the …","returns an immutable reference to the inner […","returns a mutable reference to the inner […","","","","","transforms this trillium::Conn into a <code>trillium_http::Conn</code> …","retrieves the halted state of this conn.  see [<code>Conn::halt</code>]…","predicate function to indicate whether the connection is …","Returns a user-displayable string description of the …","obtain a mutable borrow of the listener description, …","A convenience macro for logging the contents of error …","returns the request method for this conn.","Either returns the current &mut T from the state set, or …","","Customize the name of your handler. This is used in Debug …","Customize the name of your handler. This is used in Debug …","Constructs a new State handler from any Clone + Send + …","Constructs a new Init handler with an async function that …","Conn::ok is a convenience function for the common pattern …","returns the path for this request. note that this may not …","for router implementations. removes a route segment onto …","for router implementations. pushes a route segment onto …","returns a [ReceivedBody] that references this conn. the …","Convenience function to read the content of a request …","if there is a response body for this conn and it has a …","Executes this handler, performing any modifications to the…","","","Returns a user-displayable description of the server. This…","obtain a mutable borrow of the server description, …","Sets the response body from any <code>impl Into<Body></code>. Note …","sets the <code>halted</code> attribute of this conn. see [<code>Conn::halt</code>].","Puts a new type into the state set. see [<code>Conn::state</code>] for …","assigns a status to this response. see [<code>Conn::status</code>] for …","Attempts to retrieve a &T from the state set","Attempts to retrieve a &mut T from the state set","returns the response status for this conn, if it has been …","Removes the response body from the conn","Removes a type from the state set and returns it, if …","Returns the local_addr of a bound tcp listener, if such a …","","","","","","","","","","","","","","","","This will only be called if the handler reponds true to […","This will only be called if the handler reponds true to […","","","","","Sets the response body from any <code>impl Into<Body></code> and …","apply a [<code>Header</code>] to the response headers and return the …","Puts a new type into the state set and returns the conn. …","sets the response status for this conn and returns it. …"],"i":[0,0,0,0,0,0,0,1,2,2,3,4,1,5,3,4,1,5,5,5,0,0,4,5,3,4,1,5,5,3,3,4,1,5,5,5,3,1,2,2,3,3,1,2,2,3,3,3,4,1,5,3,3,3,5,5,0,3,3,1,2,2,4,1,3,3,3,3,3,3,3,2,4,1,5,5,3,3,3,3,3,3,3,3,3,5,5,5,3,4,1,5,3,4,1,5,3,4,1,5,1,2,2,3,4,1,5,3,3,3,3],"f":[null,null,null,null,null,null,null,[[["conn",3]],[["box",3],["pin",3]]],[[["conn",3]],[["box",3],["pin",3]]],[[["conn",3]],[["box",3],["pin",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["info",3]],[[]],null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["conn",3]]],[[]],[[]],[[]],[[["socketaddr",4]]],[[]],[[["str",15]]],[[]],[[["upgrade",6]],["bool",15]],[[["upgrade",6]],["bool",15]],[[["upgrade",6]],["bool",15]],[[],["headers",3]],[[],["headers",3]],[[["info",3]],[["pin",3],["box",3]]],[[["info",3]],[["pin",3],["box",3]]],[[["info",3]],[["pin",3],["box",3]]],[[],["conn",3]],[[],["conn",3]],[[]],[[]],[[]],[[]],[[],[["transport",8],["conn",3]]],[[],["bool",15]],[[],["bool",15]],[[],["str",15]],[[],["string",3]],null,[[],["method",4]],[[]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[],[["cow",4],["str",15]]],[[]],[[]],[[],["conn",3]],[[],["str",15]],[[]],[[["string",3]]],[[]],[[]],[[],[["u64",15],["option",4]]],[[["conn",3]],[["box",3],["pin",3]]],[[["conn",3]],[["box",3],["pin",3]]],[[["conn",3]],[["box",3],["pin",3]]],[[],["str",15]],[[],["string",3]],[[]],[[["bool",15]]],[[["send",8],["sync",8]],[["option",4],["send",8],["sync",8]]],[[]],[[],["option",4]],[[],["option",4]],[[],[["statuscode",4],["option",4]]],[[],[["body",3],["option",4]]],[[],[["option",4],["send",8],["sync",8]]],[[],[["socketaddr",4],["option",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["upgrade",6]],[["pin",3],["box",3]]],[[["upgrade",6]],[["pin",3],["box",3]]],[[["upgrade",6]],[["pin",3],["box",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["send",8],["sync",8]]],[[]]],"p":[[3,"Init"],[8,"Handler"],[3,"Conn"],[3,"State"],[3,"Info"]]},\
"trillium_askama":{"doc":"provides support for using the askama compile-time …","t":[8,8,24,10,10,11,10,10],"n":["AskamaConnExt","Template","Template","extension","render","render","render_into","size_hint"],"q":["trillium_askama","","","","","","",""],"d":["extends trillium conns with the ability to render askama …","Main <code>Template</code> trait; implementations are generally derived","","Helper function to inspect the template’s extension","renders an askama template, halting the conn and setting …","Helper method which allocates a new <code>String</code> and renders …","Renders the template to the given <code>writer</code> buffer","Provides an conservative estimate of the expanded length …"],"i":[0,0,0,1,2,1,1,1],"f":[null,null,null,[[],[["str",15],["option",4]]],[[]],[[],[["string",3],["error",4],["result",4]]],[[["write",8]],[["error",4],["result",4]]],[[],["usize",15]]],"p":[[8,"Template"],[8,"AskamaConnExt"]]},\
"trillium_async_std":{"doc":"Trillium server adapter for async-std","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11],"n":["ClientConfig","Stopper","TcpConnector","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","config","connect","default","default","fmt","fmt","fmt","from","from","from","into","into","into","is_stopped","new","nodelay","peer_addr","run","run_async","spawn","stop","stop_future","stop_stream","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["trillium_async_std","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["configuration for the tcp Connector","This struct provides a synchronized mechanism for …","trillium client tcp connector for async-std","","","","","","","","","","","","","Configures a server before running it","","","","","","","","","","","","","Returns whether this stopper (or any clone of it) has been…","Initialize a stopper that is not yet stopped and that has …","disable nagle’s algorithm","","Runs a trillium handler in a sync context with default …","Runs a trillium handler in an async context with default …","","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","","","","","","","","","","set a time to live for the tcp protocol","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,2,1,3,1,2,3,1,2,3,1,2,3,3,3,1,2,0,0,2,3,3,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["clientconfig",3]],[[],["tcpconnector",3]],[[],["stopper",3]],[[]],[[]],[[]],[[],[["asyncstdserver",3],["config",3]]],[[["url",3]],[["pin",3],["box",3]]],[[],["clientconfig",3]],[[],["stopper",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["stopper",3]],null,[[],[["result",6],["socketaddr",4]]],[[]],[[]],[[]],[[]],[[],["futurestopper",3]],[[],["streamstopper",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"ClientConfig"],[3,"TcpConnector"],[3,"Stopper"]]},\
"trillium_aws_lambda":{"doc":"Trillium server adapter for aws lambda","t":[8,10,5,5],"n":["LambdaConnExt","lambda_context","run","run_async"],"q":["trillium_aws_lambda","","",""],"d":["Provides access to the aws lambda context for […","returns the [<code>lamedh_runtime::Context</code>] for this conn","Runs a trillium handler in a sync context","Runs a trillium handler on an already-running tokio …"],"i":[0,1,0,0],"f":[null,[[],["context",3]],[[]],[[]]],"p":[[8,"LambdaConnExt"]]},\
"trillium_client":{"doc":"trillium client is a http client that uses the same <code>conn</code> …","t":[3,13,16,3,8,13,4,13,13,13,13,13,13,13,13,13,13,6,16,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","Closed","Config","Conn","Connector","EncodingError","Error","HeaderMissing","HeadersTooLong","Httparse","Io","MalformedHeader","MissingMethod","MissingStatusCode","MissingVersion","PartialHead","RequestPathMissing","Result","Transport","TryFromIntError","UnexpectedHeader","UnexpectedUriFormat","UnrecognizedMethod","UnrecognizedStatusCode","UnsupportedVersion","Url","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_conn","clone","clone_into","connect","default","delete","delete","drop","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get","get","into","into","into","method","new","new","patch","patch","peer_addr","post","post","put","put","recycle","request_headers","response_body","response_headers","send","set_config","set_request_body","source","spawn","status","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","vzip","vzip","vzip","with_config","with_config","with_default_pool","with_request_body"],"q":["trillium_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A client contains a Config and an optional connection …","connection was closed","A type that can be used to configure this Connector. It …","a client connection, representing both an outbound http …","Interface for runtime and tls adapters for the trillium …","we expected utf8, but there was an encoding error","Concrete errors that occur within trillium’s http …","the relevant http protocol expected this header, but it …","for security reasons, we do not allow request headers …","[<code>httparse::Error</code>]","[<code>std::io::Error</code>]","we were unable to parse a header","this request did not have a method","this request did not have a status code","this request did not have a version, but we expect one …","an incomplete http head","this error describes a request that does not specify a …","this crate’s result type","The async read + write type for this connector, often a …","[<code>TryFromIntError</code>]","we received a header that does not make sense in context","this error describes a malformed request with a path that …","we were unable to parse this http method","we were unable to parse this http method","async-h1 doesn’t speak this http version this error is …","[<code>url::ParseError</code>]","","","","","","","","builds a new conn borrowing the config on this client. if …","","","Initiate a connection to the provided url, using the …","","Builds a new client conn with the delete http method and …","Builds a new client conn with the delete http method and …","","Performs the http request, consuming and returning the …","","","","","","","","","","","","","Builds a new client conn with the get http method and the …","Builds a new client conn with the get http method and the …","","","","retrieves the url for this conn.","builds a new client Conn with the provided method and url","Constructs a new Client without a connection pool and …","Builds a new client conn with the patch http method and …","Builds a new client conn with the patch http method and …","A SocketAddr representation of the other side of this …","Builds a new client conn with the post http method and …","Builds a new client conn with the post http method and …","Builds a new client conn with the put http method and the …","Builds a new client conn with the put http method and the …","Returns this conn to the connection pool if it is …","retrieves a mutable borrow of the request headers, …","returns a [<code>ReceivedBody</code>] that borrows the connection …","","Performs the http request on a mutable borrow of the …","imperatively assign a given config reference to this Conn.","","","Spawn and detach a task on the runtime. Although this may …","returns the status code for this conn. if the conn has …","","","","","","","","","","","","retrieves the url for this conn.","","","","set a config reference on this conn and return the conn, …","chainable constructor to specify Connector configuration. …","chainable constructor to enable connection pooling. this …",""],"i":[0,1,2,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,1,1,1,1,3,3,4,1,3,4,1,4,4,4,2,4,3,4,3,3,3,4,1,1,3,4,1,1,1,1,1,1,3,4,3,4,1,3,3,4,3,4,2,3,4,3,4,3,3,3,3,3,3,3,1,2,3,4,1,3,4,1,3,4,1,3,4,1,3,3,4,1,3,4,4,3],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["conn",3]],[[]],[[]],[[["url",3]],[["pin",3],["box",3]]],[[]],[[]],[[],["conn",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["error",3]],["error",4]],[[]],[[["error",4]],["error",4]],[[["utf8error",3]],["error",4]],[[["parseerror",4]],["error",4]],[[["tryfrominterror",3]],["error",4]],[[]],[[],["conn",3]],[[]],[[]],[[]],[[],["method",4]],[[]],[[]],[[]],[[],["conn",3]],[[],[["socketaddr",4],["error",3],["result",4]]],[[]],[[],["conn",3]],[[]],[[],["conn",3]],[[]],[[],["headers",3]],[[],["receivedbody",3]],[[],["headers",3]],[[]],[[]],[[]],[[],[["option",4],["error",8]]],[[]],[[],[["option",4],["statuscode",4]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["url",3]],[[]],[[]],[[]],[[],["conn",3]],[[]],[[]],[[]]],"p":[[4,"Error"],[8,"Connector"],[3,"Conn"],[3,"Client"]]},\
"trillium_cookies":{"doc":"the trillium cookie handler","t":[8,3,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,10],"n":["CookiesConnExt","CookiesHandler","before_send","borrow","borrow_mut","clone","clone_into","cookies","cookies_mut","default","fmt","from","into","new","run","to_owned","try_from","try_into","type_id","vzip","with_cookie"],"q":["trillium_cookies","","","","","","","","","","","","","","","","","","","",""],"d":["Extension trait adding cookie capacities to [<code>Conn</code>].","The trillium cookie handler. See crate level docs for an …","","","","","","gets a reference to the cookie jar","gets a mutable reference to the cookie jar","","","","","constructs a new cookies handler","","","","","","","adds a cookie to the cookie jar and returns the conn"],"i":[0,0,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,2],"f":[null,null,[[["conn",3]],[["box",3],["pin",3]]],[[]],[[]],[[],["cookieshandler",3]],[[]],[[],["cookiejar",3]],[[],["cookiejar",3]],[[],["cookieshandler",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["conn",3]],[["box",3],["pin",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["cookie",3]]]],"p":[[3,"CookiesHandler"],[8,"CookiesConnExt"]]},\
"trillium_handlebars":{"doc":"Handlebars templating handler for trillium based on the …","t":[3,3,8,3,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Assigns","Handlebars","HandlebarsConnExt","HandlebarsHandler","assign","assigns","assigns_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_templates","clone","clone","clone_into","clone_into","default","default","default","deref","deref_mut","dev_mode","fmt","fmt","fmt","from","from","from","from","from","from","get_escape_fn","get_template","get_templates","has_template","into","into","into","new","new","register_decorator","register_escape_fn","register_helper","register_partial","register_template","register_template_file","register_template_string","register_templates_directory","render","render","render_template","render_template_to_write","render_template_with_context","render_to_write","render_with","render_with_context","run","serialize","set_dev_mode","set_strict_mode","strict_mode","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unregister_escape_fn","unregister_template","vzip","vzip","vzip"],"q":["trillium_handlebars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A struct for accumulating key-value data for use in …","The single entry point of your Handlebars templates","Extension trait that provides handlebar rendering …","A trillium handler that provides registered templates to …","Registers an “assigns” value on this Conn for use in …","retrieves a reference to any accumulated assigns on this …","retrieves a mutable reference to any accumulated assigns …","","","","","","","Unregister all templates","","","","","","","","","","Return dev mode state, default is false","","","","","","","","","","Get a reference to the current <em>escape fn</em>.","Return a registered template,","Return all templates registered","Return <code>true</code> if a template is registered for the given name","","","","Builds a new trillium Handlebars handler from either a …","","Register a decorator","Register a new <em>escape fn</em> to be used from now on by this …","Register a helper","Register a partial string","Register a <code>Template</code>","Register a template from a path","Register a template string","Register templates from a directory","renders a registered template, passing any accumulated …","Render a registered template with some data into a string","Render a template string using current registry without …","Render a template string using current registry without …","Render a template string using reused context data","Render a registered template and write some data to the …","renders a registered template by name with the provided …","Render a registered template with reused context","","","Enable or disable dev mode","Enable or disable handlebars strict mode","Return strict mode state, default is false.","","","","","","","","","","","","Restore the default <em>escape fn</em>.","Remove a template from the registry","","",""],"i":[0,0,0,0,1,1,1,2,3,4,2,3,4,4,3,4,3,4,2,3,4,2,2,4,2,3,4,2,3,3,3,3,4,4,4,4,4,2,3,4,3,4,4,4,4,4,4,4,4,4,1,4,4,4,4,4,1,4,3,2,4,4,4,3,4,2,3,4,2,3,4,2,3,4,4,4,2,3,4],"f":[null,null,null,null,[[]],[[],[["option",4],["assigns",3]]],[[],["assigns",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["handlebarshandler",3]],[[],["registry",3]],[[]],[[]],[[],["assigns",3]],[[],["handlebarshandler",3]],[[],["registry",3]],[[]],[[]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["pathbuf",3]]],[[["handlebars",3]]],[[["str",15]]],[[]],[[],["fn",8]],[[["str",15]],[["option",4],["template",3]]],[[],["hashmap",3]],[[["str",15]],["bool",15]],[[]],[[]],[[]],[[]],[[],["registry",3]],[[["box",3],["str",15],["decoratordef",8],["global",3]]],[[]],[[["box",3],["helperdef",8],["str",15],["global",3]]],[[["str",15]],[["templateerror",3],["result",4]]],[[["str",15],["template",3]]],[[["str",15]],[["templateerror",3],["result",4]]],[[["str",15]],[["templateerror",3],["result",4]]],[[["str",15]],[["templateerror",3],["result",4]]],[[["str",15]]],[[["str",15]],[["rendererror",3],["string",3],["result",4]]],[[["str",15]],[["rendererror",3],["string",3],["result",4]]],[[["str",15]],[["rendererror",3],["result",4]]],[[["context",3],["str",15]],[["rendererror",3],["string",3],["result",4]]],[[["str",15]],[["rendererror",3],["result",4]]],[[["str",15]]],[[["context",3],["str",15]],[["rendererror",3],["string",3],["result",4]]],[[["conn",3]],[["pin",3],["box",3]]],[[],["result",4]],[[["bool",15]]],[[["bool",15]]],[[],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["str",15]]],[[]],[[]],[[]]],"p":[[8,"HandlebarsConnExt"],[3,"Assigns"],[3,"HandlebarsHandler"],[3,"Handlebars"]]},\
"trillium_html_rewriter":{"doc":"trillium handler that rewrites html using lol-html and the…","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["HtmlRewriter","borrow","borrow_mut","fmt","from","into","new","run","try_from","try_into","type_id","vzip"],"q":["trillium_html_rewriter","","","","","","","","","","",""],"d":["trillium handler for html rewriting","","","","","","construct a new html rewriter from the provided …","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["conn",3]],[["box",3],["pin",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"HtmlRewriter"]]},\
"trillium_http":{"doc":"This crate provides the http 1.x implementation for …","t":[4,13,13,3,13,13,3,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,3,4,13,6,13,3,3,13,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,8,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BodyEncoder","Chunked","Chunked","ChunkedEncoder","Close","Closed","Conn","Conn","ConnectionStatus","EncodingError","End","Error","Fixed","FixedLength","HeaderMissing","HeadersTooLong","Httparse","Io","MalformedHeader","MissingMethod","MissingStatusCode","MissingVersion","PartialHead","ReceivedBody","ReceivedBodyState","RequestPathMissing","Result","Start","Stopper","Synthetic","TryFromIntError","UnexpectedHeader","UnexpectedUriFormat","UnrecognizedMethod","UnrecognizedStatusCode","UnsupportedVersion","Upgrade","Upgrade","Url","as_box_any","as_box_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone_into","clone_into","content_length","default","default","drain","encoding","eq","finalize_headers","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","headers","into","into","into","into","into","into","into","into","into","into","is_empty","is_secure","is_stopped","len","map","map_transport","map_transport","method","method","method","ne","new","new","new","new_synthetic","path","path","path","poll_close","poll_close","poll_flush","poll_flush","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_write","poll_write","read_bytes","read_string","replace_body","request_body","request_encoding","request_headers","request_headers","request_headers_mut","response_body","response_encoding","response_headers","set_response_body","set_status","source","state","state","state","state_mut","status","stop","stop_future","stop_stream","stopper","stopper","take_response_body","take_transport","to_owned","to_owned","to_string","transport","transport","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","current_index","remaining","total","total_length","BoxedTransport","Transport","as_box_any","as_box_any","borrow","borrow_mut","deref","downcast","fmt","from","into","new","poll_close","poll_flush","poll_read","poll_write","try_from","try_into","type_id","vzip"],"q":["trillium_httptrillium_http::ReceivedBodyState","","","","trillium_http::transport","","","","","","","","","","","","","","","","","","",""],"d":["A http encoder for [<code>http_types::Body</code>]. You probably don’…","a chunked body","read state for a chunked-encoded body. the number of …","An encoder for chunked encoding.","The transport has been closed, either by the client or by …","connection was closed","A http connection","Another <code>Conn</code> request has been sent on the same transport …","This represents the next state after a response on a conn …","we expected utf8, but there was an encoding error","the terminal read state","Concrete errors that occur within trillium’s http …","a fixed-length body","read state for a fixed-length body.","the relevant http protocol expected this header, but it …","for security reasons, we do not allow request headers …","[<code>httparse::Error</code>]","[<code>std::io::Error</code>]","we were unable to parse a header","this request did not have a method","this request did not have a status code","this request did not have a version, but we expect one …","an incomplete http head","A received http body","the current read state of this body","this error describes a request that does not specify a …","this crate’s result type","initial state","This struct provides a synchronized mechanism for …","Synthetic represents a simple transport that contains …","[<code>TryFromIntError</code>]","we received a header that does not make sense in context","this error describes a malformed request with a path that …","we were unable to parse this http method","we were unable to parse this http method","async-h1 doesn’t speak this http version this error is …","This open (pub fields) struct represents a http upgrade. …","An http upgrade has been negotiated. This is always a …","[<code>url::ParseError</code>]","","","","","","","","","","","","","","","","","","","","","","","Any bytes that have been read from the underlying …","","","","","Returns the content-length of this body, if available. …","","","Consumes the remainder of this body from the underlying …","returns the character encoding of this body, usually …","","calculates any auto-generated headers for this conn prior …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","read-only access to the request headers","","","","","","","","","","","predicate to determine if this synthetic contains no …","predicate function to indicate whether the connection is …","Returns whether this stopper (or any clone of it) has been…","the length of this synthetic transport’s body","read any number of new <code>Conn</code>s from the transport and call …","applies a mapping function from one transport to another. …","Modify the transport type of this upgrade. This is useful …","returns the http method for this conn’s request.","the http method","The http request method","","Create a new Conn from the provided transport, as well as …","builds a body encoder for the provided [<code>http_types::Body</code>]","Initialize a stopper that is not yet stopped and that has …","Construct a new synthetic conn with provided method, …","retrieves the path part of the request url, up to and …","the http request path","The request path","","","","","","","","","","","","","Similar to [<code>ReceivedBody::read_string</code>], but returns the …","Reads the entire body to string, using the encoding …","Replaces the synthetic body. This is intended for testing …","returns a [ReceivedBody] that references this conn. the …","returns the [encoding_rs::Encoding] for this request, as …","returns an immutable reference to the request headers. it …","The http request headers","A Conn provides the ability to mutate request headers …","returns a reference to the current response body, if it …","returns the [encoding_rs::Encoding] for this response, as …","returns a mutable reference to the response headers","Sets the response body to anything that is […","sets the http status code from any <code>TryInto<StatusCode></code>.","","returns a read-only reference to the state typemap for …","any state that has been accumulated on the Conn before …","Any state that has been accumulated on the Conn before …","returns a mutable reference to the state typemap for this …","retrieves the current response status code for this conn, …","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","returns a clone of the [<code>stopper::Stopper</code>] for this Conn. …","A [<code>Stopper</code>] which can and should be used to gracefully …","remove the response body from this conn and return it","takes the static transport from this received body","","","","Types to represent the bidirectional data stream over …","The underlying io (often a TcpStream or similar)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","current index represents the bytes that have already been …","remaining indicates the bytes left <em>in the current chunk</em>. …","total indicates the size of the current chunk or zero to …","total length indicates the claimed length, usually …","A type for dyn [<code>Transport</code>][crate::transport::Transport] …","The interface that the http protocol is communicated over.","in order to support downcasting from a <code>Box<dyn Transport></code>,…","","","","","Attempt to convert the trait object into a specific …","","","","Create a new BoxedTransport from some Transport.","","","","","","","",""],"i":[0,1,2,0,3,4,0,3,0,4,2,0,1,2,4,4,4,4,4,4,4,4,4,0,0,4,0,2,0,0,4,4,4,4,4,4,0,3,4,5,6,7,8,5,1,9,2,4,3,6,10,7,8,5,1,9,2,4,3,6,10,5,2,10,2,10,7,2,10,7,7,2,8,7,8,5,1,9,2,4,4,3,6,10,7,8,5,5,1,9,2,4,4,4,4,4,4,3,6,6,6,6,6,6,6,10,5,7,8,5,1,9,2,4,3,6,10,6,8,10,6,8,8,5,8,5,5,2,8,1,10,8,8,5,5,5,6,5,6,7,7,5,1,9,6,5,6,7,7,8,8,8,8,5,8,8,8,8,8,8,4,8,5,5,8,8,10,10,10,8,5,8,7,2,10,4,0,5,7,8,5,1,9,2,4,3,6,10,7,8,5,1,9,2,4,3,6,10,7,8,5,1,9,2,4,3,6,10,7,8,5,1,9,2,4,3,6,10,11,12,12,11,0,0,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["receivedbodystate",4]],[[],["stopper",3]],[[]],[[]],[[],[["u64",15],["option",4]]],[[]],[[],["stopper",3]],[[]],[[],["encoding",3]],[[["receivedbodystate",4]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["conn",3]]],[[]],[[]],[[]],[[]],[[]],[[["error",3]]],[[["parseerror",4]]],[[["error",4]]],[[["tryfrominterror",3]]],[[["utf8error",3]]],[[]],[[]],[[["string",3]]],[[["vec",3],["option",4]]],[[]],[[["str",15]]],[[["vec",3],["u8",15]]],[[]],[[]],[[],["headers",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4],["usize",15]]],[[["stopper",3]]],[[],[["unpin",8],["conn",3],["send",8],["asyncwrite",8],["asyncread",8],["sync",8]]],[[],[["unpin",8],["upgrade",3],["send",8],["asyncwrite",8],["asyncread",8],["sync",8]]],[[],["method",4]],[[],["method",4]],null,[[["receivedbodystate",4]],["bool",15]],[[["vec",3],["stopper",3],["option",4]]],[[["body",3]]],[[],["stopper",3]],[[["method",4]]],[[],["str",15]],[[],["str",15]],null,[[["context",3],["pin",3]],[["poll",4],["result",6]]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[["context",3],["pin",3]],[["poll",4],["result",6]]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[["context",3],["pin",3]],[["option",4],["poll",4]]],[[["context",3],["pin",3]],[["poll",4],["result",6]]],[[["context",3],["pin",3]],[["poll",4],["result",6]]],[[["context",3],["pin",3]],[["poll",4],["result",6]]],[[["context",3],["pin",3]],[["poll",4],["result",6]]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[["context",3],["pin",3]],[["poll",4],["result",6]]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[]],[[]],[[]],[[]],[[],["encoding",3]],[[],["headers",3]],null,[[],["headers",3]],[[],[["option",4],["body",3]]],[[],["encoding",3]],[[],["headers",3]],[[]],[[]],[[],[["error",8],["option",4]]],[[],["extensions",3]],[[],["extensions",3]],null,[[],["extensions",3]],[[],[["option",4],["statuscode",4]]],[[]],[[],["futurestopper",3]],[[],["streamstopper",3]],[[],["stopper",3]],null,[[],[["option",4],["body",3]]],[[],["option",4]],[[]],[[]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["box",3]],[["any",8],["box",3]]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[]],[[]],[[]],[[],[["option",4],["box",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[["context",3],["pin",3]],[["result",6],["poll",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"BodyEncoder"],[4,"ReceivedBodyState"],[4,"ConnectionStatus"],[4,"Error"],[3,"Upgrade"],[3,"Synthetic"],[3,"ReceivedBody"],[3,"Conn"],[3,"ChunkedEncoder"],[3,"Stopper"],[13,"FixedLength"],[13,"Chunked"],[8,"Transport"],[3,"BoxedTransport"]]},\
"trillium_logger":{"doc":"Development-mode logger for trillium","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Logger","before_send","borrow","borrow_mut","clone","clone_into","default","fmt","from","init","into","new","run","to_owned","try_from","try_into","type_id","vzip"],"q":["trillium_logger","","","","","","","","","","","","","","","","",""],"d":["Development-mode logger for trillium","","","","","","","","","","","construct a new logger","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["conn",3]],[["pin",3],["box",3]]],[[]],[[]],[[],["logger",3]],[[]],[[],["logger",3]],[[["formatter",3]],["result",6]],[[]],[[["info",3]],[["pin",3],["box",3]]],[[]],[[]],[[["conn",3]],[["pin",3],["box",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Logger"]]},\
"trillium_native_tls":{"doc":"This crate provides native tls trait implementations for …","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Identity","NativeTlsAcceptor","NativeTlsConfig","NativeTlsConnector","accept","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect","default","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_pkcs12","from_pkcs12","into","into","into","into","new","peer_addr","spawn","tcp_config","tls_connector","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["trillium_native_tls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A cryptographic identity.","trillium [<code>Acceptor</code>] for native-tls","Configuration for the native tls client connector","trillium client connector for native tls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","constructs a NativeTlsAcceptor from a pkcs12 key and …","Parses a DER-formatted PKCS #12 archive, using the …","","","","","constructs a NativeTlsAcceptor from a […","","","configuration for the inner Connector (usually tcp)","native tls configuration","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,3,2,1,2,3,1,1,1,1,1,2,3,4,1,4,1,2,3,4,1,3,3,2,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4],"f":[null,null,null,null,[[],[["box",3],["pin",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nativetlsacceptor",3]],[[],["nativetlsconfig",3]],[[],["nativetlsconnector",3]],[[],["identity",3]],[[]],[[]],[[]],[[]],[[["url",3]],[["pin",3],["box",3]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["tlsacceptor",3]]],[[]],[[]],[[["tlsacceptor",3]]],[[["identity",3]]],[[]],[[]],[[]],[[["str",15]]],[[["str",15]],[["result",4],["identity",3],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6],["socketaddr",4]]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"NativeTlsAcceptor"],[3,"NativeTlsConfig"],[3,"NativeTlsConnector"],[3,"Identity"]]},\
"trillium_proxy":{"doc":"http reverse proxy trillium handler","t":[3,16,8,3,16,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","Config","Connector","Proxy","Transport","borrow","borrow","borrow_mut","borrow_mut","build_conn","clone","clone_into","connect","default","delete","fmt","fmt","from","from","get","has_upgrade","into","into","new","new","patch","peer_addr","post","proxy_not_found","put","run","spawn","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upgrade","vzip","vzip","with_client","with_config","with_config","with_default_pool","without_halting"],"q":["trillium_proxy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A client contains a Config and an optional connection …","A type that can be used to configure this Connector. It …","Interface for runtime and tls adapters for the trillium …","the proxy handler","The async read + write type for this connector, often a …","","","","","builds a new conn borrowing the config on this client. if …","","","Initiate a connection to the provided url, using the …","","Builds a new client conn with the delete http method and …","","","","","Builds a new client conn with the get http method and the …","","","","construct a new proxy handler that sends all requests to …","Constructs a new Client without a connection pool and …","Builds a new client conn with the patch http method and …","A SocketAddr representation of the other side of this …","Builds a new client conn with the post http method and …","chainable constructor to set the 404 Not Found handling …","Builds a new client conn with the put http method and the …","","Spawn and detach a task on the runtime. Although this may …","","","","","","","","","","","chainable constructor to specfiy a [<code>Client</code>] to use. This …","chainable constructor to specify the client Connector …","chainable constructor to specify Connector configuration. …","chainable constructor to enable connection pooling. this …","The default behavior for this handler is to halt the conn …"],"i":[0,1,0,0,1,2,3,2,3,3,3,3,1,3,3,2,3,2,3,3,2,2,3,2,3,3,1,3,2,3,2,1,3,2,3,2,3,2,3,2,2,3,2,2,3,3,2],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["conn",3]],[[],["client",3]],[[]],[[["url",3]],[["box",3],["pin",3]]],[[],["client",3]],[[],["conn",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[],["conn",3]],[[["upgrade",3]],["bool",15]],[[]],[[]],[[]],[[],["client",3]],[[],["conn",3]],[[],[["socketaddr",4],["result",4],["error",3]]],[[],["conn",3]],[[]],[[],["conn",3]],[[["conn",3]],[["pin",3],["box",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["upgrade",6]],[["pin",3],["box",3]]],[[]],[[]],[[["client",3]]],[[]],[[],["client",3]],[[],["client",3]],[[]]],"p":[[8,"Connector"],[3,"Proxy"],[3,"Client"]]},\
"trillium_router":{"doc":"Welcome to the trillium router crate!","t":[3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,10],"n":["Router","RouterConnExt","RouterRef","any","any","before_send","borrow","borrow","borrow_mut","borrow_mut","build","default","delete","delete","fmt","fmt","from","from","get","get","has_upgrade","into","into","name","new","param","patch","patch","post","post","put","put","routes","run","try_from","try_from","try_into","try_into","type_id","type_id","upgrade","vzip","vzip","wildcard"],"q":["trillium_router","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Router handler","Extends trillium::Conn with accessors for router params.","A <code>&mut Router</code> for use with <code>Router::build</code>","Appends the handler to all (get, post, put, delete, and …","Appends the handler to all (get, post, put, delete, and …","","","","","","Another way to build a router, if you don’t like the …","","Registers a handler for the delete http method.","Registers a handler for the delete http method.","","","","","Registers a handler for the get http method.","Registers a handler for the get http method.","","","","","Constructs a new Router. This is often used with […","Retrieves a captured param from the conn. Note that this …","Registers a handler for the patch http method.","Registers a handler for the patch http method.","Registers a handler for the post http method.","Registers a handler for the post http method.","Registers a handler for the put http method.","Registers a handler for the put http method.","The routes macro represents an experimental macro for …","","","","","","","","","","","Retrieves the wildcard match from the conn. Note that …"],"i":[0,0,0,1,2,1,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,1,2,1,1,3,1,2,1,2,1,2,0,1,1,2,1,2,1,2,1,1,2,3],"f":[null,null,null,[[["str",15]]],[[["str",15]]],[[["conn",3]],[["pin",3],["box",3]]],[[]],[[]],[[]],[[]],[[],["router",3]],[[],["router",3]],[[["str",15]]],[[["str",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[["upgrade",6]],["bool",15]],[[]],[[]],[[],[["str",15],["cow",4]]],[[]],[[["str",15]],[["option",4],["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],null,[[["conn",3]],[["pin",3],["box",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["upgrade",6]],[["box",3],["pin",3]]],[[]],[[]],[[],[["option",4],["str",15]]]],"p":[[3,"Router"],[3,"RouterRef"],[8,"RouterConnExt"]]},\
"trillium_rustls":{"doc":"This crate provides rustls trait implementations for …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RustlsAcceptor","RustlsConfig","RustlsConnector","accept","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","connect","default","fmt","fmt","fmt","from","from","from","from","from","from","from_pkcs8","into","into","into","new","peer_addr","rustls_config","spawn","tcp_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["trillium_rustls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["trillium [<code>Acceptor</code>] for Rustls","Client configuration for RustlsConnector","this struct provides rustls a trillium client connector …","","","","","","","","","","","","","","","","","","","","","","","","","build a new RustlsAcceptor from a pkcs8 cert and key","","","","build a new RustlsAcceptor from a [<code>ServerConfig</code>] or a […","","configuration for rustls itself","","configuration for the inner transport","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,2,3,1,2,3,3,1,1,1,1,2,3,1,1,2,3,2,3,2,3,1,2,3,1,2,3,1,2,3,1],"f":[null,null,null,[[],[["pin",3],["box",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rustlsconnector",3]],[[],["rustlsconfig",3]],[[],["rustlsacceptor",3]],[[]],[[]],[[]],[[["url",3]],[["box",3],["pin",3]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["clientconfig",3]]],[[]],[[["serverconfig",3]]],[[["tlsacceptor",3]]],[[]],[[]],[[]],[[]],[[]],[[],[["socketaddr",4],["result",6]]],null,[[]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"RustlsAcceptor"],[3,"RustlsConnector"],[3,"RustlsConfig"]]},\
"trillium_server_common":{"doc":"Utilities for building trillium server adapters","t":[8,8,8,3,3,16,8,8,16,16,8,3,16,16,3,10,10,11,11,11,23,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,10,11,10,10,10,11,10,11,10,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Acceptor","AsyncRead","AsyncWrite","CloneCounter","Config","Config","ConfigExt","Connector","Error","Output","Server","Stopper","Transport","Transport","Url","accept","acceptor","acceptor","as_ref","as_str","async_trait","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_listener","build_listener","cannot_be_a_base","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","connect","counter","counter","current","decrement","default","default","default","deserialize","deserialize_internal","domain","drop","eq","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from_directory_path","from_file_path","from_str","graceful_shutdown","graceful_shutdown","handle_stream","handle_stream","has_authority","has_host","hash","host","host","host","host_str","increment","index","index","index","index","into","into","into","into","into_future","into_string","is_stopped","join","make_relative","new","new","new","nodelay","nodelay","options","origin","parse","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","peer_addr","poll","poll_close","poll_flush","poll_read","poll_read_vectored","poll_write","poll_write_vectored","port","port","port","port_or_known_default","query","query_pairs","query_pairs_mut","run","run","run_async","run_async","scheme","serialize","serialize_internal","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","should_register_signals","should_register_signals","socket_addrs","socket_addrs","socket_addrs","spawn","stop","stop_future","stop_stream","stopper","stopper","to_file_path","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","username","vzip","vzip","vzip","vzip","with_acceptor","with_host","with_nodelay","with_port","with_stopper","without_signals"],"q":["trillium_server_commond":["This trait provides the common interface for server-side …","Read bytes asynchronously.","Write bytes asynchronously.","an atomic counter that increments on clone & decrements …","Primary entrypoint for configuring and running a trillium …","A type that can be used to configure this Connector. It …","Server-implementer interfaces to Config","Interface for runtime and tls adapters for the trillium …","An error type that [<code>Acceptor::accept</code>] may return","The stream type. For example, TlsStream","The server trait, for standard network-based server …","This struct provides a synchronized mechanism for …","The [<code>Transport</code>] type to use for this server …","The async read + write type for this connector, often a …","A parsed URL record.","Transform an Input (…","returns the tls acceptor for this server","","","Return the serialization of this URL.","","","","","","","","","","builds any type that is TryFromstd::net::TcpListener and …","","Return whether this URL is a cannot-be-a-base URL, …","","","","","","","","","","Initiate a connection to the provided url, using the …","returns the [<code>CloneCounter</code>] for this server. please note …","","Returns the current count. The first CloneCounter is …","Manually decrement the count. This is useful when taking a…","","","","","Serialize with Serde using the internal representation of …","If this URL has a host and it is a domain name (not an IP …","","","","","","","","Return this URL’s fragment identifier, if any.","","","","","Convert a directory name as <code>std::path::Path</code> into an URL …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","waits for the last clone of the [<code>CloneCounter</code>] in this …","","apply the provided handler to the transport, using […","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","resolve the host for this application, either directly …","","Return the parsed representation of the host for this URL.…","Return the string representation of the host (domain or …","Manually increment the count. unless paired with a …","","","","","","","","","","Return the serialization of this URL.","Returns whether this stopper (or any clone of it) has been…","Parse a string as an URL, with this URL as the base URL.","Creates a relative URL if possible, with this URL as the …","Constructs a new CloneCounter. Identical to …","build a new config with default acceptor","Initialize a stopper that is not yet stopped and that has …","returns whether the server should set TCP_NODELAY on the …","","Return a default <code>ParseOptions</code> that can fully configure …","Return the origin of this URL (…","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator …","Return an object with methods to manipulate this URL’s …","A SocketAddr representation of the other side of this …","","Attempt to close the object.","Attempt to flush the object, ensuring that any buffered …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","resolve a port for this application, either directly …","","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a …","entrypoint to run a handler with a given config. if this …","Starts an async runtime and runs the provided handler with…","entrypoint to run a handler with a given config within a …","Runs the provided handler with this config, in an …","Return the scheme of this URL, lower-cased, as an ASCII …","","Serialize with Serde using the internal representation of …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","returns whether this server should register itself for …","","use the [<code>ConfigExt::port</code>] and [<code>ConfigExt::host</code>] to resolve…","","Resolve a URL’s host and port number to <code>SocketAddr</code>.","Spawn and detach a task on the runtime. Although this may …","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","returns a clone of the [<code>Stopper</code>] associated with this …","","Assuming the URL is in the <code>file</code> scheme or similar, …","","","","","","","","","","","","","","","","","","","Return the username for this URL (typically the empty …","","","","","Configures the tls acceptor for this server","Configures the server to listen on this host or ip …","Configures the tcp listener to use TCP_NODELAY. See …","Configures the server to listen on this port. The default …","use the specific [<code>Stopper</code>] provided","Configures the server to NOT register for …"],"i":[0,0,0,0,0,1,0,0,2,2,0,0,3,1,0,2,4,5,6,6,0,7,5,6,8,7,5,6,8,4,5,6,7,5,6,8,7,5,6,8,6,1,4,5,7,7,7,5,8,6,6,6,7,6,7,5,6,6,8,6,7,5,6,8,6,6,6,4,5,4,5,6,6,6,4,5,6,6,7,6,6,6,6,7,5,6,8,7,6,8,6,6,7,5,8,4,5,6,6,6,6,6,6,6,6,6,1,7,9,9,10,10,9,9,4,5,6,6,6,6,6,3,5,3,5,6,6,6,6,6,6,6,6,6,6,6,6,4,5,4,5,6,1,8,8,8,4,5,6,7,5,6,8,6,7,5,6,6,8,7,5,6,8,7,5,6,8,6,7,5,6,8,5,5,5,5,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["pin",3],["box",3]]],[[]],[[]],[[],["str",15]],[[],["str",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[],["url",3]],[[],["stopper",3]],[[]],[[]],[[]],[[]],[[["url",3]],["ordering",4]],[[["url",3]],[["pin",3],["box",3]]],[[],["clonecounter",3]],[[],["clonecounter",3]],[[],["usize",15]],[[]],[[],["clonecounter",3]],[[]],[[],["stopper",3]],[[],[["result",4],["url",3]]],[[],[["result",4],["url",3]]],[[],[["option",4],["str",15]]],[[]],[[["url",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[],[["url",3],["result",4]]],[[],[["url",3],["result",4]]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[],[["pin",3],["box",3]]],[[],[["pin",3],["box",3]]],[[],[["pin",3],["box",3]]],[[],[["pin",3],["box",3]]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["string",3]],[[],["string",3]],[[],[["option",4],["host",4]]],[[],[["option",4],["str",15]]],[[]],[[["range",3],["position",4]],["str",15]],[[["position",4],["rangeto",3]],["str",15]],[[["position",4],["rangefrom",3]],["str",15]],[[["rangefull",3]],["str",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["bool",15]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[["url",3]],[["option",4],["string",3]]],[[]],[[]],[[],["stopper",3]],[[],["bool",15]],[[],["bool",15]],[[],["parseoptions",3]],[[],["origin",4]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[["str",15]],[["parseerror",4],["result",4],["url",3]]],[[["url",3]],[["option",4],["ordering",4]]],[[],[["option",4],["str",15]]],[[],["str",15]],[[],[["split",3],["option",4]]],[[],[["result",4],["pathsegmentsmut",3]]],[[],[["result",4],["socketaddr",4],["error",3]]],[[["context",3],["pin",3]],["poll",4]],[[["pin",3],["context",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[],["u16",15]],[[],["u16",15]],[[],[["option",4],["u16",15]]],[[],[["option",4],["u16",15]]],[[],[["option",4],["str",15]]],[[],["parse",3]],[[],[["serializer",3],["urlquery",3]]],[[["config",3]]],[[["handler",8]]],[[["config",3]],[["pin",3],["box",3]]],[[]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[["option",4],["str",15]]],[[["option",4],["str",15]],[["parseerror",4],["result",4]]],[[["ipaddr",4]],["result",4]],[[["option",4],["str",15]],["result",4]],[[["str",15]]],[[["option",4],["u16",15]],["result",4]],[[["option",4],["str",15]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["bool",15]],[[],["bool",15]],[[],[["vec",3],["socketaddr",4]]],[[],[["vec",3],["socketaddr",4]]],[[],[["error",3],["result",4],["vec",3]]],[[]],[[]],[[],["futurestopper",3]],[[],["streamstopper",3]],[[],["stopper",3]],[[],["stopper",3]],[[],[["pathbuf",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["result",4],["url",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[["acceptor",8]],[["config",3],["acceptor",8]]],[[["str",15]]],[[]],[[["u16",15]]],[[["stopper",3]]],[[]]],"p":[[8,"Connector"],[8,"Acceptor"],[8,"Server"],[8,"ConfigExt"],[3,"Config"],[3,"Url"],[3,"CloneCounter"],[3,"Stopper"],[8,"AsyncWrite"],[8,"AsyncRead"]]},\
"trillium_sessions":{"doc":"Trillium sessions","t":[3,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11],"n":["CookieStore","MemoryStore","Session","SessionConnExt","SessionHandler","before_send","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup","clear_store","clear_store","clone","clone","clone","clone_into","clone_into","clone_into","count","data_changed","default","deserialize","destroy","destroy_session","destroy_session","eq","expire_in","expires_in","expiry","fmt","fmt","fmt","fmt","from","from","from","from","get","get_raw","id","id_from_cookie_value","insert","insert_raw","into","into","into","into","into_cookie_value","is_destroyed","is_expired","len","load_session","load_session","new","new","new","new","regenerate","remove","reset_data_changed","run","serialize","session","session_mut","set_cookie_value","set_expiry","store_session","store_session","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","with_cookie_domain","with_cookie_name","with_cookie_path","with_older_secrets","with_same_site_policy","with_session","with_session_ttl","without_save_unchanged"],"q":["trillium_sessions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A session store that serializes the entire session into a …","in-memory session store","The main session type.","extension trait to add session support to [<code>Conn</code>]","Handler to enable sessions.","","","","","","","","","","Performs session cleanup. This should be run on an …","","","","","","","","","returns the number of elements in the memory store","Checks if the data has been modified. This is based on the…","","","mark this session for destruction. the actual session …","","","","assigns the expiry timestamp to a duration from the …","Ensures that this session is not expired. Returns None if …","returns the expiry timestamp of this session, if there is …","","","","","","","","","deserializes a type T out of the session hashmap","returns the String value contained in the session hashmap","Gets the session id","applies a cryptographic hash function on a cookie value …","inserts a serializable value into the session hashmap. …","inserts a string into the session hashmap","","","","","takes the cookie value and consume this session. this is …","returns true if this session is marked for destruction","predicate function to determine if this session is …","returns the number of elements in the session hashmap","","","Constructs a SessionHandler from the given […","constructs a new CookieStore","Create a new instance of MemoryStore","Create a new session. Generates a random id and matching …","Generates a new id and cookie for this session","removes an entry from the session hashmap","Resets <code>data_changed</code> dirty tracking. This is unnecessary …","","","retrieve a reference to the current session","retrieve a mutable reference to the current session","sets the cookie value that this session will use to …","assigns an expiry timestamp to this session","","","","","","","","","","","","","","","","","","Ensures that this session is not expired. Returns None if …","","","","","Sets the domain of the cookie.","Sets the name of the cookie that the session is stored …","Sets a cookie path for this session handler. The default …","Sets optional older signing keys that will not be used to …","Sets the same site policy for the session cookie. …","append a key-value pair to the current session, where the …","Sets a session ttl. This will be used both for the cookie …","Disables the <code>save_unchanged</code> setting. When <code>save_unchanged</code> …"],"i":[0,0,0,0,0,1,1,2,3,4,1,2,3,4,3,2,3,2,3,4,2,3,4,3,4,4,4,4,2,3,4,4,4,4,1,2,3,4,1,2,3,4,4,4,4,4,4,4,1,2,3,4,4,4,4,4,2,3,1,2,3,4,4,4,4,1,4,5,5,4,4,2,3,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,4,1,2,3,4,1,1,1,1,1,5,1,1],"f":[null,null,null,null,null,[[["conn",3]],[["box",3],["pin",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["pin",3],["box",3]]],[[],[["pin",3],["box",3]]],[[],["cookiestore",3]],[[],["memorystore",3]],[[],["session",3]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["session",3]],[[],[["result",4],["session",3]]],[[]],[[["session",3]],[["pin",3],["box",3]]],[[["session",3]],[["pin",3],["box",3]]],[[["session",3]],["bool",15]],[[["duration",3]]],[[],[["option",4],["duration",3]]],[[],[["option",4],["datetime",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[["str",15]],["option",4]],[[["str",15]],[["option",4],["string",3]]],[[],["str",15]],[[["str",15]],[["decodeerror",4],["result",4],["string",3]]],[[["str",15]],[["error",3],["result",4]]],[[["str",15],["string",3]]],[[]],[[]],[[]],[[]],[[],[["option",4],["string",3]]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[["string",3]],[["pin",3],["box",3]]],[[["string",3]],[["pin",3],["box",3]]],[[]],[[],["cookiestore",3]],[[],["memorystore",3]],[[],["session",3]],[[]],[[["str",15]]],[[]],[[["conn",3]],[["box",3],["pin",3]]],[[],["result",4]],[[],["session",3]],[[],["session",3]],[[["string",3]]],[[["datetime",3],["utc",3]]],[[["session",3]],[["box",3],["pin",3]]],[[["session",3]],[["box",3],["pin",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["option",4],["session",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["samesite",4]]],[[["str",15]]],[[["duration",3],["option",4]]],[[]]],"p":[[3,"SessionHandler"],[3,"CookieStore"],[3,"MemoryStore"],[3,"Session"],[8,"SessionConnExt"]]},\
"trillium_smol":{"doc":"Trillium adapter using smol and async-global-executor","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11],"n":["ClientConfig","Stopper","TcpConnector","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","config","connect","default","default","fmt","fmt","fmt","from","from","from","into","into","into","is_stopped","new","nodelay","peer_addr","run","run_async","spawn","stop","stop_future","stop_stream","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["trillium_smol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["configuration for the tcp Connector","This struct provides a synchronized mechanism for …","tcp connector for smol based on async_net::TcpStream","","","","","","","","","","","","","Configures a server before running it","","","","","","","","","","","","","Returns whether this stopper (or any clone of it) has been…","Initialize a stopper that is not yet stopped and that has …","disable nagle’s algorithm","","Runs a trillium handler in a sync context with default …","Runs a trillium handler in an async context with default …","","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","","","","","","","","","","set a time to live for the tcp protocol","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,2,1,3,1,2,3,1,2,3,1,2,3,3,3,1,2,0,0,2,3,3,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["clientconfig",3]],[[],["tcpconnector",3]],[[],["stopper",3]],[[]],[[]],[[]],[[],[["config",3],["smol",3]]],[[["url",3]],[["pin",3],["box",3]]],[[],["clientconfig",3]],[[],["stopper",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["stopper",3]],null,[[],[["result",6],["socketaddr",4]]],[[]],[[]],[[]],[[]],[[],["futurestopper",3]],[[],["streamstopper",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"ClientConfig"],[3,"TcpConnector"],[3,"Stopper"]]},\
"trillium_static":{"doc":"Serves static file assets from the file system.","t":[3,11,11,14,11,11,11,11,11,11,11,11,11,11],"n":["StaticFileHandler","borrow","borrow_mut","crate_relative_path","fmt","from","into","new","run","try_from","try_into","type_id","vzip","with_index_file"],"q":["trillium_static","","","","","","","","","","","","",""],"d":["trillium handler to serve static files from the filesystem","","","a convenient helper macro to build a str relative to the …","","","","builds a new StaticFileHandler","","","","","","sets the index file on this StaticFileHandler"],"i":[0,1,1,0,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["conn",3]],[["box",3],["pin",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["str",15]]]],"p":[[3,"StaticFileHandler"]]},\
"trillium_static_compiled":{"doc":"Serves static file assets from the file system.","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["StaticCompiledHandler","borrow","borrow_mut","clone","clone_into","fmt","from","into","new","run","to_owned","try_from","try_into","type_id","vzip","with_index_file"],"q":["trillium_static_compiled","","","","","","","","","","","","","","",""],"d":["The static compiled handler which contains the …","","","","","","","","Constructs a new StaticCompiledHandler. This must be used …","","","","","","","Configures the optional index file for this …"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["staticcompiledhandler",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["dir",3]]],[[["conn",3]],[["box",3],["pin",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["str",15]]]],"p":[[3,"StaticCompiledHandler"]]},\
"trillium_tera":{"doc":"this crate provides the tera templating language for …","t":[3,3,8,3,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Context","Tera","TeraConnExt","TeraHandler","add_raw_template","add_raw_templates","add_template_file","add_template_files","assign","autoescape_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_inheritance_chains","check_macro_files","clone","clone","clone","clone_into","clone_into","clone_into","contains_key","context","context_mut","default","default","eq","extend","extend","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_serialize","from_value","full_reload","get","get_template_names","insert","into","into","into","into_json","ne","new","new","new","one_off","parse","register_filter","register_function","register_tester","remove","render","render","render_str","render_to","reset_escape_fn","run","set_escape_fn","tera","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["trillium_tera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The struct that holds the context of a template rendering.","The main point of interaction in this library.","Extends trillium::Conn with tera template-rendering …","","Add a single template to the Tera instance","Add all the templates given to the Tera instance","Add a single template from a path to the Tera instance. …","Add several templates from paths to the Tera instance. …","Adds a key-value pair to the assigns [<code>Context</code>], where the …","Select which suffix(es) to automatically do HTML escaping …","","","","","","","We need to know the hierarchy of templates to be able to …","We keep track of macro files loaded in each Template so …","","","","","","","Checks if a value exists at a specific index.","Retrieves a reference to the tera assigns context. Must …","retrieves a reference to the tera assigns context. must …","","","","Appends the data of the <code>source</code> parameter to <code>self</code>, …","Use that method when you want to add a given Tera …","","","","","","","","","","","","","Takes something that impl Serialize and create a context …","Takes a serde-json <code>Value</code> and convert it into a <code>Context</code> …","Re-parse all templates found in the glob given to Tera …","Returns the value at a given key index.","Returns an iterator over the names of all registered …","Converts the <code>val</code> parameter to <code>Value</code> and insert it into …","","","","Converts the context to a <code>serde_json::Value</code> consuming the …","","Construct a new TeraHandler from either a <code>&str</code> or PathBuf …","Initializes an empty context","Create a new instance of Tera, containing all the parsed …","Renders a one off template (for example a template coming …","Create a new instance of Tera, containing all the parsed …","Register a filter with Tera.","Register a function with Tera.","Register a tester with Tera.","Remove a key from the context, returning the value at the …","Uses the accumulated assigns context to render the …","Renders a Tera template given a <code>tera::Context</code>,","Renders a one off template (for example a template coming …","Renders a Tera template given a <code>tera::Context</code> to a […","Reset escape function to default <code>tera::escape_html</code>.","","Set user-defined function which applied to a rendered …","Retrieves a reference to the [<code>Tera</code>] instance. Must be …","","","","","","","Converts the <code>val</code> parameter to <code>Value</code> and insert it into …","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,2,1,3,4,1,3,4,1,1,1,3,4,1,3,4,1,4,2,2,4,1,4,4,1,3,4,1,3,3,3,3,3,3,3,4,1,4,4,1,4,1,4,3,4,1,4,4,3,4,1,1,1,1,1,1,4,2,1,1,1,1,3,1,2,3,4,1,3,4,1,4,3,4,1,3,4,1,3,4,1],"f":[null,null,null,null,[[["str",15]],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[["option",4],["str",15]],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[["str",15]]],[[["str",15],["vec",3],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],["terahandler",3]],[[],["context",3]],[[],["tera",3]],[[]],[[]],[[]],[[["str",15]],["bool",15]],[[],["context",3]],[[],["context",3]],[[],["context",3]],[[],["tera",3]],[[["context",3]],["bool",15]],[[["context",3]]],[[["tera",3]],[["error",3],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["string",3]]],[[]],[[]],[[["tera",3]]],[[["string",3]]],[[["str",15]]],[[["pathbuf",3]]],[[]],[[]],[[],[["result",4],["error",3],["context",3]]],[[["value",4]],[["result",4],["error",3],["context",3]]],[[],[["error",3],["result",4]]],[[["str",15]],[["value",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[],["value",4]],[[["context",3]],["bool",15]],[[]],[[],["context",3]],[[["str",15]],[["error",3],["tera",3],["result",4]]],[[["bool",15],["str",15],["context",3]],[["error",3],["string",3],["result",4]]],[[["str",15]],[["error",3],["tera",3],["result",4]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["str",15]],[["value",4],["option",4]]],[[["str",15]]],[[["str",15],["context",3]],[["error",3],["string",3],["result",4]]],[[["str",15],["context",3]],[["error",3],["string",3],["result",4]]],[[["str",15],["context",3]],[["error",3],["result",4]]],[[]],[[["conn",3]],[["pin",3],["box",3]]],[[]],[[],["tera",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["error",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"Tera"],[8,"TeraConnExt"],[3,"TeraHandler"],[3,"Context"]]},\
"trillium_testing":{"doc":"testing utilities for trillium applications.","t":[13,13,8,8,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,11,11,11,11,14,14,14,14,14,14,14,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,10,11,11,11,11,0,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,5,5,5,5,5,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Accepted","Acl","AsyncRead","AsyncReadExt","AsyncWrite","BadGateway","BadRequest","BaselineControl","Bind","Checkin","Checkout","Conflict","Connect","Continue","Copy","Created","Delete","EarlyHints","ExpectationFailed","FailedDependency","Forbidden","Found","GatewayTimeout","Get","Gone","Head","HttpVersionNotSupported","ImATeapot","ImUsed","InsufficientStorage","InternalServerError","Label","LengthRequired","Link","Lock","Locked","LoopDetected","Merge","Method","MethodNotAllowed","MisdirectedRequest","MkActivity","MkCalendar","MkCol","MkRedirectRef","MkWorkspace","Move","MovedPermanently","MultiStatus","MultipleChoice","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","Options","OrderPatch","PartialContent","Patch","PayloadTooLarge","PaymentRequired","PermanentRedirect","Post","PreconditionFailed","PreconditionRequired","Pri","PropFind","PropPatch","ProxyAuthenticationRequired","Put","Rebind","Report","RequestHeaderFieldsTooLarge","RequestTimeout","RequestedRangeNotSatisfiable","ResetContent","Search","SeeOther","ServiceUnavailable","StatusCode","SwitchingProtocols","TemporaryRedirect","TestConn","TestTransport","TooEarly","TooManyRequests","Trace","Unauthorized","UnavailableForLegalReasons","Unbind","Uncheckout","Unlink","Unlock","UnprocessableEntity","UnsupportedMediaType","Update","UpdateRedirectRef","UpgradeRequired","UriTooLong","Url","VariantAlsoNegotiates","VersionControl","as_box_any","as_ref","as_ref","as_str","assert_body","assert_body_contains","assert_headers","assert_not_handled","assert_ok","assert_response","assert_status","block_on","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_reader","build","bytes","cannot_be_a_base","canonical_reason","chain","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","cmp","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize_internal","domain","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","from","from","from","from","from","from_directory_path","from_file_path","from_str","from_str","has_authority","has_host","hash","hash","hash","host","host_str","index","index","index","index","init","into","into","into","into","into","into_string","is_client_error","is_informational","is_redirection","is_safe","is_server_error","is_success","join","make_relative","methods","new","on","options","origin","parse","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","poll_close","poll_close","poll_flush","poll_flush","poll_read","poll_read","poll_read_vectored","poll_write","poll_write","poll_write_vectored","port","port_or_known_default","prelude","query","query_pairs","query_pairs_mut","read","read","read_exact","read_to_end","read_to_string","read_vectored","run","run_async","scheme","serialize","serialize","serialize","serialize_internal","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket_addrs","take","take_body_string","take_request_body_string","to_file_path","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","username","vzip","vzip","vzip","vzip","vzip","with_request_body","with_request_header","with_server","write","delete","get","patch","post","put","Accepted","Acl","BadGateway","BadRequest","BaselineControl","Bind","Checkin","Checkout","Conflict","Conn","Connect","Continue","Copy","Created","Delete","EarlyHints","ExpectationFailed","FailedDependency","Forbidden","Found","GatewayTimeout","Get","Gone","Head","HttpVersionNotSupported","ImATeapot","ImUsed","InsufficientStorage","InternalServerError","Label","LengthRequired","Link","Lock","Locked","LoopDetected","Merge","Method","MethodNotAllowed","MisdirectedRequest","MkActivity","MkCalendar","MkCol","MkRedirectRef","MkWorkspace","Move","MovedPermanently","MultiStatus","MultipleChoice","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","Options","OrderPatch","PartialContent","Patch","PayloadTooLarge","PaymentRequired","PermanentRedirect","Post","PreconditionFailed","PreconditionRequired","Pri","PropFind","PropPatch","ProxyAuthenticationRequired","Put","Rebind","Report","RequestHeaderFieldsTooLarge","RequestTimeout","RequestedRangeNotSatisfiable","ResetContent","Search","SeeOther","ServiceUnavailable","StatusCode","SwitchingProtocols","TemporaryRedirect","TooEarly","TooManyRequests","Trace","Unauthorized","UnavailableForLegalReasons","Unbind","Uncheckout","Unlink","Unlock","UnprocessableEntity","UnsupportedMediaType","Update","UpdateRedirectRef","UpgradeRequired","UriTooLong","VariantAlsoNegotiates","VersionControl","borrow","borrow_mut","fmt","from","from","from","halt","headers","headers_mut","inner","inner_mut","into","into_inner","is_halted","is_secure","method","mut_state_or_insert_with","ok","path","pop_path","push_path","request_body","request_body_string","response_len","set_body","set_halted","set_state","set_status","state","state_mut","status","take_response_body","take_state","try_from","try_into","type_id","vzip","with_body","with_header","with_state","with_status"],"q":["trillium_testingtrillium_testing::methods","","","","","trillium_testing::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["202 Accepted","The ACL method modifies the access control list (which …","Read bytes asynchronously.","Extension trait for [<code>AsyncRead</code>].","Write bytes asynchronously.","502 Bad Gateway","400 Bad Request","A collection can be placed under baseline control with a …","The BIND method modifies the collection identified by the …","A CHECKIN request can be applied to a checked-out …","A CHECKOUT request can be applied to a checked-in …","409 Conflict","The CONNECT method requests that the recipient establish …","100 Continue","The COPY method creates a duplicate of the source …","201 Created","The DELETE method requests that the origin server remove …","103 Early Hints","417 Expectation Failed","424 Failed Dependency","403 Forbidden","302 Found","504 Gateway Timeout","The GET method requests transfer of a current selected …","410 Gone","The HEAD method is identical to GET except that the …","505 HTTP Version Not Supported","418 I’m a teapot","226 Im Used","507 Insufficient Storage","500 Internal Server Error","A LABEL request can be applied to a version to modify the …","411 Length Required","The LINK method establishes one or more Link …","The LOCK method is used to take out a lock of any access …","423 Locked","508 Loop Detected","The MERGE method performs the logical merge of a …","HTTP request methods.","405 Method Not Allowed","421 Misdirected Request","A MKACTIVITY request creates a new activity resource.","An HTTP request using the MKCALENDAR method creates a new …","MKCOL creates a new collection resource at the location …","The MKREDIRECTREF method requests the creation of a …","A MKWORKSPACE request creates a new workspace resource.","The MOVE operation on a non-collection resource is the …","301 Moved Permanently","207 Multi-Status","300 Multiple Choice","511 Network Authentication Required","204 No Content","203 Non Authoritative Information","406 Not Acceptable","510 Not Extended","404 Not Found","501 Not Implemented","304 Not Modified","200 Ok","The OPTIONS method requests information about the …","The ORDERPATCH method is used to change the ordering …","206 Partial Content","The PATCH method requests that a set of changes described …","413 Payload Too Large","402 Payment Required","308 Permanent Redirect","The POST method requests that the target resource process …","412 Precondition Failed","428 Precondition Required","This method is never used by an actual client. This …","The PROPFIND method retrieves properties defined on the …","The PROPPATCH method processes instructions specified in …","407 Proxy Authentication Required","The PUT method requests that the state of the target …","The REBIND method removes a binding to a resource from a …","A REPORT request is an extensible mechanism for obtaining …","431 Request Header Fields Too Large","408 Request Timeout","416 Requested Range Not Satisfiable","205 Reset Content","The client invokes the SEARCH method to initiate a …","303 See Other","503 Service Unavailable","HTTP response status codes.","101 Switching Protocols","307 Temporary Redirect","A wrapper around a [<code>trillium::Conn</code>] for testing","a readable and writable transport for testing","425 Too Early","429 Too Many Requests","The TRACE method requests a remote, application-level …","401 Unauthorized","451 Unavailable For Legal Reasons","The UNBIND method modifies the collection identified by …","An UNCHECKOUT request can be applied to a checked-out …","The UNLINK method removes one or more Link relationships …","The UNLOCK method removes the lock identified by the lock …","422 Unprocessable Entity","415 Unsupported Media Type","The UPDATE method modifies the content and dead …","The UPDATEREDIRECTREF method requests the update of a …","426 Upgrade Required","414 URI Too Long","A parsed URL record.","506 Variant Also Negotiates","A VERSION-CONTROL request can be used to create a …","","","","Return the serialization of this URL.","assert that the response body is as specified. this …","asserts that the response body matches the specified …","asserts any number of response headers","assert that all of the following are true:","assert_ok is like [<code>assert_response!</code>] except it always …","combines several other assertions. this assertion can be …","assert that the status code of a conn is as specified.","Blocks the current thread on a future.","","","","","","","","","","","Boxes the reader and changes its type to …","constructs a new TestConn with the provided method, path, …","Converts this [<code>AsyncRead</code>] into a [<code>Stream</code>] of bytes.","Return whether this URL is a cannot-be-a-base URL, …","The canonical reason for a given status code","Creates an adapter which will chain this stream with …","","","","","","","","","close this transport, representing a disconnection","","","","","","","","Serialize with Serde using the internal representation of …","If this URL has a host and it is a domain name (not an IP …","","","","","","","","","","","","","Return this URL’s fragment identifier, if any.","","","","","","Convert a directory name as <code>std::path::Path</code> into an URL …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","","","Return the parsed representation of the host for this URL.…","Return the string representation of the host (domain or …","","","","","initialize a handler","","","","","","Return the serialization of this URL.","Returns <code>true</code> if the status code is the <code>4xx</code> range.","Returns <code>true</code> if the status code is <code>1xx</code> range.","Returns <code>true</code> if the status code is the <code>3xx</code> range.","Whether a method is considered “safe”, meaning the …","Returns <code>true</code> if the status code is the <code>5xx</code> range.","Returns <code>true</code> if the status code is the <code>2xx</code> range.","Parse a string as an URL, with this URL as the base URL.","Creates a relative URL if possible, with this URL as the …","<code>TestConn</code> builders for http methods","constructs a new test transport pair, representing two …","blocks on running this conn against a handler and …","Return a default <code>ParseOptions</code> that can fully configure …","Return the origin of this URL (…","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator …","Return an object with methods to manipulate this URL’s …","Attempt to close the object.","","Attempt to flush the object, ensuring that any buffered …","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …","Attempt to write bytes from <code>buf</code> into the object.","","Attempt to write bytes from <code>bufs</code> into the object using …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","useful stuff for testing trillium apps","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a …","Reads some bytes from the byte stream.","the read side of this transport","Reads the exact number of bytes required to fill <code>buf</code>.","Reads the entire contents and appends them to a [<code>Vec</code>].","Reads the entire contents and appends them to a [<code>String</code>].","Like [<code>read()</code>][<code>AsyncReadExt::read()</code>], except it reads into …","blocks on running this conn against a handler and …","runs this conn against a handler and finalizes response …","Return the scheme of this URL, lower-cased, as an ASCII …","","","","Serialize with Serde using the internal representation of …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","Creates an adapter which will read at most <code>limit</code> bytes …","Reads the response body to string and returns it, if set. …","Reads the request body to string and returns it","Assuming the URL is in the <code>file</code> scheme or similar, …","","","","","","","","","","","","","","","","","","","","","","","","","","Return the username for this URL (typically the empty …","","","","","","chainable constructor to replace the request body. this …","chainable constructor to append a request header to the …","Starts an trillium handler using the smol server bound to …","the write side of this transport","Builds a new <code>TestConn</code> with the delete http method and the …","Builds a new <code>TestConn</code> with the get http method and the …","Builds a new <code>TestConn</code> with the patch http method and the …","Builds a new <code>TestConn</code> with the post http method and the …","Builds a new <code>TestConn</code> with the put http method and the …","202 Accepted","The ACL method modifies the access control list (which …","502 Bad Gateway","400 Bad Request","A collection can be placed under baseline control with a …","The BIND method modifies the collection identified by the …","A CHECKIN request can be applied to a checked-out …","A CHECKOUT request can be applied to a checked-in …","409 Conflict","A Trillium HTTP connection.","The CONNECT method requests that the recipient establish …","100 Continue","The COPY method creates a duplicate of the source …","201 Created","The DELETE method requests that the origin server remove …","103 Early Hints","417 Expectation Failed","424 Failed Dependency","403 Forbidden","302 Found","504 Gateway Timeout","The GET method requests transfer of a current selected …","410 Gone","The HEAD method is identical to GET except that the …","505 HTTP Version Not Supported","418 I’m a teapot","226 Im Used","507 Insufficient Storage","500 Internal Server Error","A LABEL request can be applied to a version to modify the …","411 Length Required","The LINK method establishes one or more Link …","The LOCK method is used to take out a lock of any access …","423 Locked","508 Loop Detected","The MERGE method performs the logical merge of a …","HTTP request methods.","405 Method Not Allowed","421 Misdirected Request","A MKACTIVITY request creates a new activity resource.","An HTTP request using the MKCALENDAR method creates a new …","MKCOL creates a new collection resource at the location …","The MKREDIRECTREF method requests the creation of a …","A MKWORKSPACE request creates a new workspace resource.","The MOVE operation on a non-collection resource is the …","301 Moved Permanently","207 Multi-Status","300 Multiple Choice","511 Network Authentication Required","204 No Content","203 Non Authoritative Information","406 Not Acceptable","510 Not Extended","404 Not Found","501 Not Implemented","304 Not Modified","200 Ok","The OPTIONS method requests information about the …","The ORDERPATCH method is used to change the ordering …","206 Partial Content","The PATCH method requests that a set of changes described …","413 Payload Too Large","402 Payment Required","308 Permanent Redirect","The POST method requests that the target resource process …","412 Precondition Failed","428 Precondition Required","This method is never used by an actual client. This …","The PROPFIND method retrieves properties defined on the …","The PROPPATCH method processes instructions specified in …","407 Proxy Authentication Required","The PUT method requests that the state of the target …","The REBIND method removes a binding to a resource from a …","A REPORT request is an extensible mechanism for obtaining …","431 Request Header Fields Too Large","408 Request Timeout","416 Requested Range Not Satisfiable","205 Reset Content","The client invokes the SEARCH method to initiate a …","303 See Other","503 Service Unavailable","HTTP response status codes.","101 Switching Protocols","307 Temporary Redirect","425 Too Early","429 Too Many Requests","The TRACE method requests a remote, application-level …","401 Unauthorized","451 Unavailable For Legal Reasons","The UNBIND method modifies the collection identified by …","An UNCHECKOUT request can be applied to a checked-out …","The UNLINK method removes one or more Link relationships …","The UNLOCK method removes the lock identified by the lock …","422 Unprocessable Entity","415 Unsupported Media Type","The UPDATE method modifies the content and dead …","The UPDATEREDIRECTREF method requests the update of a …","426 Upgrade Required","414 URI Too Long","506 Variant Also Negotiates","A VERSION-CONTROL request can be used to create a …","","","","","","","sets the <code>halted</code> attribute of this conn, preventing later …","returns the request headers","returns the mutable response headers","returns an immutable reference to the inner […","returns a mutable reference to the inner […","","transforms this trillium::Conn into a <code>trillium_http::Conn</code> …","retrieves the halted state of this conn.  see [<code>Conn::halt</code>]…","predicate function to indicate whether the connection is …","returns the request method for this conn.","Either returns the current &mut T from the state set, or …","Conn::ok is a convenience function for the common pattern …","returns the path for this request. note that this may not …","for router implementations. removes a route segment onto …","for router implementations. pushes a route segment onto …","returns a [ReceivedBody] that references this conn. the …","Convenience function to read the content of a request …","if there is a response body for this conn and it has a …","Sets the response body from any <code>impl Into<Body></code>. Note …","sets the <code>halted</code> attribute of this conn. see [<code>Conn::halt</code>].","Puts a new type into the state set. see [<code>Conn::state</code>] for …","assigns a status to this response. see [<code>Conn::status</code>] for …","Attempts to retrieve a &T from the state set","Attempts to retrieve a &mut T from the state set","returns the response status for this conn, if it has been …","Removes the response body from the conn","Removes a type from the state set and returns it, if …","","","","","Sets the response body from any <code>impl Into<Body></code> and …","apply a [<code>Header</code>] to the response headers and return the …","Puts a new type into the state set and returns the conn. …","sets the response status for this conn and returns it. …"],"i":[1,2,0,0,0,1,1,2,2,2,2,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,2,1,2,2,1,1,2,0,1,1,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,1,1,2,1,1,2,2,2,1,2,2,2,1,1,1,1,2,1,1,0,1,1,0,0,1,1,2,1,1,2,2,2,2,1,1,2,2,1,1,0,1,2,3,2,4,4,0,0,0,0,0,0,0,0,3,5,2,1,4,3,5,2,1,4,6,5,6,4,1,6,3,2,1,4,3,2,1,4,3,4,3,5,5,2,1,4,4,4,2,1,1,4,3,5,2,2,1,1,4,4,4,3,5,2,1,4,4,4,2,4,4,4,2,1,4,4,4,4,4,4,4,0,3,5,2,1,4,4,1,1,1,2,1,1,4,4,0,3,5,4,4,4,4,4,4,4,4,4,7,3,7,3,8,3,8,7,3,7,4,4,0,4,4,4,6,3,6,6,6,6,5,5,4,2,1,4,4,4,4,4,4,4,4,4,4,4,4,6,5,5,4,3,2,1,4,2,1,4,3,5,2,2,1,1,4,4,3,5,2,1,4,3,5,2,1,4,4,3,5,2,1,4,5,5,0,3,0,0,0,0,0,1,2,1,1,2,2,2,2,1,0,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,2,1,2,2,1,1,2,0,1,1,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,2,1,1,1,2,1,1,2,2,2,1,2,2,2,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,2,2,2,2,1,1,2,2,1,1,1,2,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["pin",3],["box",3]]],[[]],[[],["bytes",3]],[[],["bool",15]],[[],["str",15]],[[],["chain",3]],[[],["testtransport",3]],[[],["method",4]],[[],["statuscode",4]],[[],["url",3]],[[]],[[]],[[]],[[]],[[]],[[["url",3]],["ordering",4]],[[],["testtransport",3]],[[]],[[]],[[],[["result",4],["method",4]]],[[],[["statuscode",4],["result",4]]],[[],[["url",3],["result",4]]],[[],[["url",3],["result",4]]],[[],[["option",4],["str",15]]],[[["method",4]],["bool",15]],[[["u16",15]],["bool",15]],[[["statuscode",4]],["bool",15]],[[["url",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],[["option",4],["str",15]]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4],["url",3]]],[[],[["result",4],["url",3]]],[[["str",15]],[["result",4],["method",4]]],[[["str",15]],[["url",3],["result",4],["parseerror",4]]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[],[["option",4],["host",4]]],[[],[["option",4],["str",15]]],[[["range",3],["position",4]],["str",15]],[[["rangeto",3],["position",4]],["str",15]],[[["position",4],["rangefrom",3]],["str",15]],[[["rangefull",3]],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["str",15]],[["url",3],["result",4],["parseerror",4]]],[[["url",3]],[["string",3],["option",4]]],null,[[]],[[]],[[],["parseoptions",3]],[[],["origin",4]],[[["str",15]],[["url",3],["result",4],["parseerror",4]]],[[["str",15]],[["url",3],["result",4],["parseerror",4]]],[[["url",3]],[["option",4],["ordering",4]]],[[],[["option",4],["str",15]]],[[],["str",15]],[[],[["split",3],["option",4]]],[[],[["result",4],["pathsegmentsmut",3]]],[[["pin",3],["context",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3]],[["result",6],["poll",4]]],[[["pin",3],["context",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3]],[["result",6],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",6],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",6],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[],[["option",4],["u16",15]]],[[],[["option",4],["u16",15]]],null,[[],[["option",4],["str",15]]],[[],["parse",3]],[[],[["urlquery",3],["serializer",3]]],[[],["readfuture",3]],null,[[],["readexactfuture",3]],[[["vec",3]],["readtoendfuture",3]],[[["string",3]],["readtostringfuture",3]],[[],["readvectoredfuture",3]],[[]],[[]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["option",4],["str",15]]],[[["option",4],["str",15]],[["result",4],["parseerror",4]]],[[["ipaddr",4]],["result",4]],[[["option",4],["str",15]],["result",4]],[[["str",15]]],[[["option",4],["u16",15]],["result",4]],[[["option",4],["str",15]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["vec",3],["result",4],["error",3]]],[[["u64",15]],["take",3]],[[],[["string",3],["option",4]]],[[],["string",3]],[[],[["pathbuf",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["result",4],["method",4]]],[[["u16",15]],[["statuscode",4],["result",4]]],[[],["result",4]],[[],["result",4]],[[["str",15]],[["result",4],["url",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["testconn",3]],[[],["testconn",3]],[[],["testconn",3]],[[],["testconn",3]],[[],["testconn",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[["conn",3]],["conn",3]],[[["testconn",3]]],[[]],[[],["conn",3]],[[],["headers",3]],[[],["headers",3]],[[],["conn",3]],[[],["conn",3]],[[]],[[],["conn",3]],[[],["bool",15]],[[],["bool",15]],[[],["method",4]],[[]],[[],["conn",3]],[[],["str",15]],[[]],[[["string",3]]],[[]],[[]],[[],[["u64",15],["option",4]]],[[]],[[["bool",15]]],[[],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[],[["option",4],["statuscode",4]]],[[],[["option",4],["body",3]]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["conn",3]],[[],["conn",3]],[[],["conn",3]],[[],["conn",3]]],"p":[[4,"StatusCode"],[4,"Method"],[3,"TestTransport"],[3,"Url"],[3,"TestConn"],[8,"AsyncReadExt"],[8,"AsyncWrite"],[8,"AsyncRead"],[3,"Conn"]]},\
"trillium_tls_common":{"doc":"This crate provides the common interface for server-side …","t":[8,8,8,16,8,16,16,16,3,10,11,11,23,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11],"n":["Acceptor","AsyncRead","AsyncWrite","Config","Connector","Error","Output","Transport","Url","accept","as_ref","as_str","async_trait","borrow","borrow_mut","cannot_be_a_base","clone","clone_into","cmp","connect","deserialize","deserialize_internal","domain","eq","fmt","fmt","fragment","from","from_directory_path","from_file_path","from_str","has_authority","has_host","hash","host","host_str","index","index","index","index","into","into_string","join","make_relative","options","origin","parse","parse_with_params","partial_cmp","password","path","path_segments","path_segments_mut","peer_addr","poll_close","poll_flush","poll_read","poll_read_vectored","poll_write","poll_write_vectored","port","port_or_known_default","query","query_pairs","query_pairs_mut","scheme","serialize","serialize_internal","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket_addrs","spawn","to_file_path","to_owned","to_string","try_from","try_from","try_into","type_id","username"],"q":["trillium_tls_common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This trait provides the common interface for server-side …","Read bytes asynchronously.","Write bytes asynchronously.","A type that can be used to configure this Connector. It …","Interface for runtime and tls adapters for the trillium …","An error type that [<code>Acceptor::accept</code>] may return","The stream type. For example, TlsStream","The async read + write type for this connector, often a …","A parsed URL record.","Transform an Input (…","","Return the serialization of this URL.","","","","Return whether this URL is a cannot-be-a-base URL, …","","","","Initiate a connection to the provided url, using the …","","Serialize with Serde using the internal representation of …","If this URL has a host and it is a domain name (not an IP …","","","","Return this URL’s fragment identifier, if any.","","Convert a directory name as <code>std::path::Path</code> into an URL …","Convert a file name as <code>std::path::Path</code> into an URL in the …","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","Return the parsed representation of the host for this URL.…","Return the string representation of the host (domain or …","","","","","","Return the serialization of this URL.","Parse a string as an URL, with this URL as the base URL.","Creates a relative URL if possible, with this URL as the …","Return a default <code>ParseOptions</code> that can fully configure …","Return the origin of this URL (…","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator …","Return an object with methods to manipulate this URL’s …","A SocketAddr representation of the other side of this …","Attempt to close the object.","Attempt to flush the object, ensuring that any buffered …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","Return this URL’s query string, if any, as a …","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a …","Return the scheme of this URL, lower-cased, as an ASCII …","","Serialize with Serde using the internal representation of …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","Spawn and detach a task on the runtime. Although this may …","Assuming the URL is in the <code>file</code> scheme or similar, …","","","","","","","Return the username for this URL (typically the empty …"],"i":[0,0,0,1,0,2,2,1,0,2,3,3,0,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,4,4,5,5,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3],"f":[null,null,null,null,null,null,null,null,null,[[],[["box",3],["pin",3]]],[[],["str",15]],[[],["str",15]],null,[[]],[[]],[[],["bool",15]],[[],["url",3]],[[]],[[["url",3]],["ordering",4]],[[["url",3]],[["pin",3],["box",3]]],[[],[["result",4],["url",3]]],[[],[["result",4],["url",3]]],[[],[["option",4],["str",15]]],[[["url",3]],["bool",15]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],[["option",4],["str",15]]],[[]],[[],[["result",4],["url",3]]],[[],[["result",4],["url",3]]],[[["str",15]],[["result",4],["parseerror",4],["url",3]]],[[],["bool",15]],[[],["bool",15]],[[]],[[],[["option",4],["host",4]]],[[],[["option",4],["str",15]]],[[["range",3],["position",4]],["str",15]],[[["rangeto",3],["position",4]],["str",15]],[[["rangefrom",3],["position",4]],["str",15]],[[["rangefull",3]],["str",15]],[[]],[[],["string",3]],[[["str",15]],[["result",4],["parseerror",4],["url",3]]],[[["url",3]],[["option",4],["string",3]]],[[],["parseoptions",3]],[[],["origin",4]],[[["str",15]],[["result",4],["parseerror",4],["url",3]]],[[["str",15]],[["result",4],["parseerror",4],["url",3]]],[[["url",3]],[["option",4],["ordering",4]]],[[],[["option",4],["str",15]]],[[],["str",15]],[[],[["option",4],["split",3]]],[[],[["pathsegmentsmut",3],["result",4]]],[[],[["socketaddr",4],["result",6]]],[[["pin",3],["context",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3]],[["poll",4],["result",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[["pin",3],["context",3]],[["result",4],["poll",4]]],[[],[["option",4],["u16",15]]],[[],[["option",4],["u16",15]]],[[],[["option",4],["str",15]]],[[],["parse",3]],[[],[["urlquery",3],["serializer",3]]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[["option",4],["str",15]]],[[["option",4],["str",15]],[["parseerror",4],["result",4]]],[[["ipaddr",4]],["result",4]],[[["option",4],["str",15]],["result",4]],[[["str",15]]],[[["option",4],["u16",15]],["result",4]],[[["option",4],["str",15]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["error",3],["result",4],["vec",3]]],[[]],[[],[["pathbuf",3],["result",4]]],[[]],[[],["string",3]],[[["str",15]],[["result",4],["url",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["str",15]]],"p":[[8,"Connector"],[8,"Acceptor"],[3,"Url"],[8,"AsyncWrite"],[8,"AsyncRead"]]},\
"trillium_tokio":{"doc":"Trillium server adapter for tokio","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11],"n":["ClientConfig","Stopper","TcpConnector","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","config","connect","default","default","fmt","fmt","fmt","from","from","from","into","into","into","is_stopped","linger","new","nodelay","peer_addr","run","run_async","spawn","stop","stop_future","stop_stream","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["trillium_tokio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["configuration for the tcp Connector","This struct provides a synchronized mechanism for …","trillium client Connector for tokio","","","","","","","","","","","","","","","","","","","","","","Configures a server before running it","","","","","","","","","","","","","Returns whether this stopper (or any clone of it) has been…","sets SO_LINGER. I don’t really understand this, but see …","Initialize a stopper that is not yet stopped and that has …","disable nagle’s algorithm see [<code>TcpStream::set_nodelay</code>] …","","Runs a trillium handler in a sync context with default …","Runs a trillium handler in an async context with default …","","Stop all futures and streams that have been registered to …","This function returns a Future which wraps the provided …","This function returns a new stream which will poll None …","","","","","","","","","","time to live for the tcp protocol. set [<code>TcpStream::set_ttl</code>…","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,2,1,3,1,2,3,1,2,3,1,2,3,3,1,3,1,2,0,0,2,3,3,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["clientconfig",3]],[[],["tcpconnector",3]],[[],["stopper",3]],[[]],[[]],[[]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[],["compat",3]],[[],[["config",3],["tokioserver",3]]],[[["url",3]],[["box",3],["pin",3]]],[[],["clientconfig",3]],[[],["stopper",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["stopper",3]],null,[[],[["result",6],["socketaddr",4]]],[[]],[[]],[[]],[[]],[[],["futurestopper",3]],[[],["streamstopper",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"ClientConfig"],[3,"TcpConnector"],[3,"Stopper"]]},\
"trillium_websockets":{"doc":"A websocket trillium handler","t":[13,13,13,13,13,4,13,13,13,4,13,13,13,6,13,13,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AlreadyClosed","Binary","Capacity","Close","ConnectionClosed","Error","Http","HttpFormat","Io","Message","Ping","Pong","Protocol","Result","SendQueueFull","Text","Tls","Url","Utf8","WebSocket","WebSocketConn","binary","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","has_upgrade","headers","into","into","into","into","into","into_data","into_non_blocking","into_text","is_binary","is_close","is_empty","is_ping","is_pong","is_text","len","method","ne","new","path","poll_next","run","send_bytes","send_string","source","state","stopper","take_state","text","to_owned","to_string","to_string","to_text","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","upgrade","vzip","vzip","vzip","vzip","with_protocols"],"q":["trillium_websockets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Trying to work with already closed connection.","A binary WebSocket message","When reading: buffer capacity exhausted.When writing: …","A close message with the optional close frame.","WebSocket connection closed normally. This informs you of …","Possible WebSocket errors.","HTTP error.","HTTP format error.","Input-output error. Apart from WouldBlock, these are …","An enum representing the various forms of a WebSocket …","A ping message with the specified payload","A pong message with the specified payload","Protocol violation.","a Result type for websocket messages","Message send queue full.","A text WebSocket message","TLS error.","Invalid URL.","UTF coding error.","The trillium handler. See crate-level docs for example …","A struct that represents an specific websocket connection.","Create a new binary WebSocket message by converting to Vec…","","","","","","","","","","","close the websocket connection gracefully","","","","","","","","","","","","","","","","","","","","","","","","","","","","retrieve the request headers for this conn","","","","","","Consume the WebSocket and return it as binary data.","","Attempt to consume the WebSocket message and convert it …","Indicates whether a message is a binary message.","Indicates whether a message ia s close message.","Returns true if the WebSocket message has no content. For …","Indicates whether a message is a ping message.","Indicates whether a message is a pong message.","Indicates whether a message is a text message.","Get the length of the WebSocket message.","retrieve the request method for this conn","","Build a new WebSocket with an async handler function that …","retrieve the request path for this conn","","","send a [<code>Message::Binary</code>] variant","send a [<code>Message::Text</code>] variant","","retrieve state from the state set that has been …","retrieve a clone of the server’s [<code>Stopper</code>]","take some type T out of the state set that has been …","Create a new text WebSocket message from a stringable.","","","","Attempt to get a &str from the WebSocket message, this …","","","","","","","","","","","","","","","","","","","<code>protocols</code> is a sequence of known protocols. On successful …"],"i":[1,2,1,2,1,0,1,1,1,0,2,2,1,0,1,2,1,1,1,0,0,2,3,4,1,2,3,4,1,2,2,2,3,2,3,4,1,1,2,2,3,4,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,4,3,3,4,1,2,2,2,1,2,2,2,2,2,2,2,2,3,2,4,3,3,4,3,3,1,3,3,3,2,2,1,2,2,3,4,1,2,3,4,1,2,3,3,4,1,2,4,3,4,1,2,4],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["message",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["message",4]],[[]],[[]],[[["message",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[["error",4]],["error",4]],[[["invalidheadername",3]],["error",4]],[[["tostrerror",3]],["error",4]],[[["utf8error",3]],["error",4]],[[["invaliduri",3]],["error",4]],[[["error",3]],["error",4]],[[["invalidstatuscode",3]],["error",4]],[[["error",3]],["error",4]],[[["fromutf8error",3]],["error",4]],[[["tlserror",4]],["error",4]],[[]],[[["invalidheadervalue",3]],["error",4]],[[["string",3]],["message",4]],[[]],[[],["message",4]],[[["global",3],["u8",15],["vec",3]],["message",4]],[[["str",15]],["message",4]],[[["upgrade",6]],["bool",15]],[[],["headers",3]],[[]],[[]],[[]],[[],[["global",3],["u8",15],["vec",3]]],[[]],[[],[["global",3],["u8",15],["vec",3]]],[[],[["error",4],["option",4]]],[[],[["string",3],["error",4],["result",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["method",4]],[[["message",4]],["bool",15]],[[]],[[],["str",15]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[["conn",3]],[["pin",3],["box",3]]],[[]],[[]],[[],[["option",4],["error",8]]],[[],["option",4]],[[],["stopper",3]],[[],["option",4]],[[],["message",4]],[[]],[[],["string",3]],[[],["string",3]],[[],[["result",4],["str",15],["error",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],[["poll",4],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["upgrade",6]],[["box",3],["pin",3]]],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"Error"],[4,"Message"],[3,"WebSocketConn"],[3,"WebSocket"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};